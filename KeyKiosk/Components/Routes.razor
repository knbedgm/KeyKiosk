@rendermode InteractiveServer
@* @inject AppAuthenticationStateProvider session *@
@inject NavigationManager navManager
@inject KioskNavAuthService navAuth

<Router AppAssembly="typeof(Program).Assembly" OnNavigateAsync="authHandler">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="@typeof(Layout.MainLayout)">
            <NotAuthorized>
                <div>You are not authorized.</div>
                <div><NavLink href="login">Login</NavLink></div>
            </NotAuthorized>
            <Authorizing>
                <div>Authorizing...</div>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
</Router>

@code {
    void authHandler(Microsoft.AspNetCore.Components.Routing.NavigationContext ctx)
    {
        var newpath = navAuth.UserCanAccessPath(ctx.Path);
        if (!(newpath is null))
        {
            navManager.NavigateTo(newpath);
        }
    }



    // protected override void OnInitialized()
    // {
    //     navManager.RegisterLocationChangingHandler(OnLocationChangingHandler);
    // }

    // ValueTask OnLocationChangingHandler(LocationChangingContext ctx)
    // {
    //     var targetPath = navManager.ToBaseRelativePath(ctx.TargetLocation);
    //     var currentPath = navManager.ToBaseRelativePath(navManager.Uri);
    //     var unauthPath = navAuth.UserCanAccessPath(targetPath);
    //     Console.WriteLine($"OnLocChanging old: '{currentPath}', new: '{targetPath}'");
    //     if (!(unauthPath is null))
    //     {
    //         if (navAuth.UserCanAccessPath(currentPath) is null)
    //         {
    //             ctx.PreventNavigation();
    //         } else
    //         {
    //             ctx.PreventNavigation();
    //             navManager.NavigateTo(unauthPath);
    //         }
    //     }
    //     return ValueTask.CompletedTask;
    // }
}