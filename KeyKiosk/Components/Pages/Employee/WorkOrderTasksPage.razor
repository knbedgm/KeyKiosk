@page "/employee/WorkOrder/{WorkOrderId:int}/Tasks"
@rendermode InteractiveServer
@layout Layout.MainLayout
@namespace KeyKiosk.Components.Pages.Employee

@using KeyKiosk.Data

<h3>WorkOrderTaskPage</h3>

@* Display list of existing tasks*@
@if (TaskList != null && TaskList.Count > 0)
{
    <table>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Details</th>
            <th>Cost Cents</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
        </tr>
        @foreach (WorkOrderTask task in TaskList)
        {
            <tr>
                <td>@task.Id</td>
                <td>@task.Title</td>
                <td>@task.Details</td>
                <td>@task.CostCents</td>
                <td>@task.StartDate</td>
                <td>@task.EndDate</td>
                <td>@task.Status</td>
                <td>
                    @* Deletes selected task *@
                    @* <button @onclick="@(e => DeleteTask(task.Id))">
                        Delete
                    </button> *@
                </td>
            </tr>
        }
    </table>
}


<br />
<br />
<br />

<h1>Add New Task</h1>

<br />

@* Form to add new task *@
<EditForm Model="@TaskToAdd" OnValidSubmit="@AddNewTask">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label>Title</label>
    <select @onchange="@ModifyCreateTaskFromTemplate">
        <option disabled selected>--- Select ---</option>
        @foreach (WorkOrderTaskTemplate template in TemplateList)
        {
            <option value="@template.Id">@template.TaskTitle</option>
        }
    </select>

    <label>Cost in Cents</label>
    <input type="number" value="@TaskToAdd.CostCents" readonly />

    <label>Start Date</label>
    <input type="date" @bind="TaskToAdd.StartDate" />

    <label>End Date</label>
    <input type="date" @bind="TaskToAdd.EndDate" />

    <label>Status</label>
    <select @bind="TaskToAdd.Status">
        @foreach (WorkOrderTaskStatusType status in Enum.GetValues(typeof(WorkOrderTaskStatusType)))
        {
            <option value="@status">@status</option>
        }
    </select>

    <button type="submit">Submit</button>
</EditForm>

<br />
<br />
<br />

@if (TaskList != null && TaskList.Count > 0)
{
    <h1>Update Existing Task</h1>

    <InputSelect @bind-Value:get="TaskToUpdateId" @bind-Value:set="LoadUpdateTask">
        <option value="">Select a Task</option>
        @foreach (WorkOrderTask task in TaskList)
        {
            <option value="@task.Id">@task.Title</option>
        }
    </InputSelect>

    <br />

    @* Form to update existing template *@
    @if (TaskToUpdateId != null)
    {
        <EditForm Model="@TaskToUpdate" OnValidSubmit="@UpdateExistingTask">
            <DataAnnotationsValidator />
            <ValidationSummary />



            <label>Title</label>
            <span>@TaskToUpdateOriginal?.Title</span>

            <label>Details</label>
            <InputTextArea class="form-control" @bind-Value="TaskToUpdate.Details" />

            <label>Cost in Cents</label>
            @* <input type="number" value="@TaskToUpdate.CostCents" readonly /> *@
            <InputNumber @bind-Value=TaskToUpdate.CostCents></InputNumber>

            <label>Start Date</label>
            <input type="date" @bind="TaskToUpdate.StartDate" />

            <label>End Date</label>
            <input type="date" @bind="TaskToUpdate.EndDate" />

            <label>Status</label>
            <select @bind="TaskToUpdate.Status">
                @foreach (WorkOrderTaskStatusType status in Enum.GetValues(typeof(WorkOrderTaskStatusType)))
                {
                    <option value="@status">@status</option>
                }
            </select>

            <button type="submit">Submit</button>
        </EditForm>
    }
}