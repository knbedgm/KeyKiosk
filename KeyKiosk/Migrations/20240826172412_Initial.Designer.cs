// <auto-generated />
using System;
using KeyKiosk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KeyKiosk.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240826172412_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("KeyKiosk.Data.Drawer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentRONumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Occupied")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Drawers");
                });

            modelBuilder.Entity("KeyKiosk.Data.DrawerLogEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DrawerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventType")
                        .HasColumnType("TEXT");

                    b.Property<string>("RONumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DrawerId");

                    b.HasIndex("UserId");

                    b.ToTable("DrawerLog");
                });

            modelBuilder.Entity("KeyKiosk.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KeyKiosk.Data.UserLogEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActingUserId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecondaryUserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ActingUserId");

                    b.ToTable("UserLog");
                });

            modelBuilder.Entity("KeyKiosk.Data.DrawerLogEvent", b =>
                {
                    b.HasOne("KeyKiosk.Data.Drawer", "Drawer")
                        .WithMany()
                        .HasForeignKey("DrawerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KeyKiosk.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drawer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KeyKiosk.Data.UserLogEvent", b =>
                {
                    b.HasOne("KeyKiosk.Data.User", "ActingUser")
                        .WithMany()
                        .HasForeignKey("ActingUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActingUser");
                });
#pragma warning restore 612, 618
        }
    }
}
